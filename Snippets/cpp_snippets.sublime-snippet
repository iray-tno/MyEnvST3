<!-- UnionFind -->
<snippet>
<content><![CDATA[
#include <vector>

class UnionFind{
 private:
  std::vector<int> p_gs_; //正なら親ノードの番号で負なら自身がルートで値は-groupsize
  int groups_;            //groupの数

 public:
  const int nodes;        //ノードの数

  UnionFind(int size):p_gs_(size, -1),nodes(size),groups_(size){}

  bool unite(int x, int y){
    int rx = root(x), ry = root(y);
    if(rx!=ry){
      --groups_;
      if(p_gs_[ry] < p_gs_[rx]) std::swap(rx, ry); //rx<ryにしてrxにryを連結
      p_gs_[rx] += p_gs_[ry];
      p_gs_[ry] = rx;
    }
    return rx != ry;
  }

  bool same(int x, int y){ return root(x)==root(y); }
  int root(int x){ return p_gs_[x]<0 ? x : p_gs_[x]=root(p_gs_[x]); }
  int gsize(int x){ return -p_gs_[root(x)]; }
  int groups() const{ return groups_; }
};
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>lib-unionfind</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
</snippet>
